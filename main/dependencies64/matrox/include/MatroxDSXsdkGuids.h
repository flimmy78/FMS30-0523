//==============================================================================
//
// (c) Copyright Matrox Electronic Systems Ltd., 2013-2015. All rights reserved. 
//
// This code and information is provided "as is" without warranty of any kind, 
// either expressed or implied, including but not limited to the implied 
// warranties of merchantability and/or fitness for a particular purpose.
//
// Disclaimer: Matrox Electronic Systems Ltd. reserves the right to make 
// changes in specifications and code at any time and without notice. 
// No responsibility is assumed by Matrox Electronic Systems Ltd. for 
// its use; nor for any infringements of patents or other rights of 
// third parties resulting from its use. No license is granted under 
// any patents or patent rights of Matrox Electronic Systems Ltd.
//
//-------------------------------------------------------------------------------

#pragma once


#include "MvFlexGuids.h"


// {60EAE77A-3D29-4F01-A913-B4AEB52D6A09}
DEFINE_GUID(CLSID_ENCODER_DVCAM_NTSC_411, 
   0x60eae77a, 0x3d29, 0x4f01, 0xa9, 0x13, 0xb4, 0xae, 0xb5, 0x2d, 0x6a, 0x9);

// {7ED91A3B-B2D4-4C33-BCCE-8DE1202F2031}
DEFINE_GUID(CLSID_ENCODER_DVCAM_PAL_420, 
   0x7ed91a3b, 0xb2d4, 0x4c33, 0xbc, 0xce, 0x8d, 0xe1, 0x20, 0x2f, 0x20, 0x31);

// {44437CA9-6C61-462E-8EE8-4C16E9CF6CD9}
DEFINE_GUID(CLSID_ENCODER_DVCPRO_411, 
   0x44437ca9, 0x6c61, 0x462e, 0x8e, 0xe8, 0x4c, 0x16, 0xe9, 0xcf, 0x6c, 0xd9);

// {A622FE15-0BE9-46CB-8389-25276F96B2CF}
DEFINE_GUID(CLSID_ENCODER_DV50_422, 
   0xa622fe15, 0xbe9, 0x46cb, 0x83, 0x89, 0x25, 0x27, 0x6f, 0x96, 0xb2, 0xcf);

// {B8EBDD3C-828E-4446-99CF-F8A525A23909}
DEFINE_GUID(CLSID_ENCODER_DV100, 
   0xb8ebdd3c, 0x828e, 0x4446, 0x99, 0xcf, 0xf8, 0xa5, 0x25, 0xa2, 0x39, 0x9);

// {BB162EED-B781-45FF-92FA-51D270C5BB78}
DEFINE_GUID(CLSID_ENCODER_YUYV422, 
   0xbb162eed, 0xb781, 0x45ff, 0x92, 0xfa, 0x51, 0xd2, 0x70, 0xc5, 0xbb, 0x78);

// {06298515-C4E2-4794-8936-959E6A35E3C6}
DEFINE_GUID(CLSID_ENCODER_YUAYVA4224, 
   0x6298515, 0xc4e2, 0x4794, 0x89, 0x36, 0x95, 0x9e, 0x6a, 0x35, 0xe3, 0xc6);

// {715F4574-6BFE-4D9F-80A0-06FDEAE3E017}
DEFINE_GUID(CLSID_ENCODER_PCM, 
   0x715f4574, 0x6bfe, 0x4d9f, 0x80, 0xa0, 0x6, 0xfd, 0xea, 0xe3, 0xe0, 0x17);

// {4B8FDC94-302A-4777-8A2D-E0DE28939667}
DEFINE_GUID(CLSID_ENCODER_PRORES, 
   0x4b8fdc94, 0x302a, 0x4777, 0x8a, 0x2d, 0xe0, 0xde, 0x28, 0x93, 0x96, 0x67);

// {3B91EE6F-F4B9-4B68-A3CE-8EB8AA66BFD5}
DEFINE_GUID(CLSID_ENCODER_AAC, 
   0x3b91ee6f, 0xf4b9, 0x4b68, 0xa3, 0xce, 0x8e, 0xb8, 0xaa, 0x66, 0xbf, 0xd5);

// {7DF3FF08-D4BD-4001-8345-BAC27F6707A3}
DEFINE_GUID(CLSID_ENCODER_D10, 
   0x7df3ff08, 0xd4bd, 0x4001, 0x83, 0x45, 0xba, 0xc2, 0x7f, 0x67, 0x7, 0xa3);

// {8387324B-FA25-4D3C-9EF1-BAB599F767FE}
DEFINE_GUID(CLSID_ENCODER_AVCINTRA, 
   0x8387324b, 0xfa25, 0x4d3c, 0x9e, 0xf1, 0xba, 0xb5, 0x99, 0xf7, 0x67, 0xfe);

// {E26CDEB3-8ADE-4A4E-92FE-AAD803BE18D3}
DEFINE_GUID(CLSID_ENCODER_H264_HW_X264,
   0xe26cdeb3, 0x8ade, 0x4a4e, 0x92, 0xfe, 0xaa, 0xd8, 0x3, 0xbe, 0x18, 0xd3);

// {BAB2AA64-439C-4C8D-B28A-31349027313B}
DEFINE_GUID(CLSID_ENCODER_H264_SW, 
   0xbab2aa64, 0x439c, 0x4c8d, 0xb2, 0x8a, 0x31, 0x34, 0x90, 0x27, 0x31, 0x3b);

// {2350D1D3-86F1-464E-84B4-98463241E69A}
DEFINE_GUID(CLSID_ENCODER_H264_QSV, 
   0x2350d1d3, 0x86f1, 0x464e, 0x84, 0xb4, 0x98, 0x46, 0x32, 0x41, 0xe6, 0x9a);

// {9AAE7B18-78A0-4994-8B5B-A716160067EA}
DEFINE_GUID(CLSID_ENCODER_DNXHD, 
   0x9aae7b18, 0x78a0, 0x4994, 0x8b, 0x5b, 0xa7, 0x16, 0x16, 0x0, 0x67, 0xea);

// {8D99CC3E-725C-4A1C-8D8A-F80F67403790}
DEFINE_GUID(IID_IMvHostNode, 
   0x8d99cc3e, 0x725c, 0x4a1c, 0x8d, 0x8a, 0xf8, 0xf, 0x67, 0x40, 0x37, 0x90);

// {39CD7676-371F-41F7-BB77-B3C6953A9EB3}
DEFINE_GUID(IID_IMvCompressedHostNode,
   0x39cd7676, 0x371f, 0x41f7, 0xbb, 0x77, 0xb3, 0xc6, 0x95, 0x3a, 0x9e, 0xb3);

// {BCA0B70E-41C0-4CBE-B544-E372FE73BBA3}
DEFINE_GUID(IID_IMvTextureNode,
            0xbca0b70e, 0x41c0, 0x4cbe, 0xb5, 0x44, 0xe3, 0x72, 0xfe, 0x73, 0xbb, 0xa3);
            
// {71E2CA34-6A28-4524-9C00-65B85C16169D}
DEFINE_GUID(IID_IMvVancDataPackets,
            0x71e2ca34, 0x6a28, 0x4524, 0x9c, 0x0, 0x65, 0xb8, 0x5c, 0x16, 0x16, 0x9d);

// {2DC9B2CE-48D9-40DD-AAE0-3AAE3084E00E}
DEFINE_GUID(IID_IMvRenderingTargetNode,
            0x2dc9b2ce, 0x48d9, 0x40dd, 0xaa, 0xe0, 0x3a, 0xae, 0x30, 0x84, 0xe0, 0xe);

// {327ACA5B-ABB6-4E77-AC7F-B83DD94ABA1D} //keMvSurfaceFormatMpegIBPMainProfileMainLevel_420
DEFINE_GUID(CLSID_ENCODER_MPEG2IBP,
   0x327aca5b, 0xabb6, 0x4e77, 0xac, 0x7f, 0xb8, 0x3d, 0xd9, 0x4a, 0xba, 0x1d);
// {BC7CFE79-DFA0-4269-A62C-4971D9F4D3B5} //keMvSurfaceFormatMpegIFrameMainProfileMainLevel_420

DEFINE_GUID(CLSID_ENCODER_MPEG2IFRAME, 
   0xbc7cfe79, 0xdfa0, 0x4269, 0xa6, 0x2c, 0x49, 0x71, 0xd9, 0xf4, 0xd3, 0xb5);

// {66F21851-EE53-480F-ABC4-12747DCB0495}
DEFINE_GUID(IID_IMvEncoderStream,
   0x66f21851, 0xee53, 0x480f, 0xab, 0xc4, 0x12, 0x74, 0x7d, 0xcb, 0x4, 0x95);

// {9F2E51FF-C211-4A7F-9272-DADB71093950}
DEFINE_GUID(IID_IMvMuxerStream,
   0x9f2e51ff, 0xc211, 0x4a7f, 0x92, 0x72, 0xda, 0xdb, 0x71, 0x9, 0x39, 0x50);

// {72F6E96A-2EDD-43B1-A0B0-68572B2D6BDD}
DEFINE_GUID(IID_IMvEchoStream,
   0x72f6e96a, 0x2edd, 0x43b1, 0xa0, 0xb0, 0x68, 0x57, 0x2b, 0x2d, 0x6b, 0xdd);


// {32AF1022-7CEA-4A23-A8FA-473F428FC4C6}
DEFINE_GUID(IID_IMvRTPSenderStream,
   0x32af1022, 0x7cea, 0x4a23, 0xa8, 0xfa, 0x47, 0x3f, 0x42, 0x8f, 0xc4, 0xc6);

// {D9683BA9-8542-47DC-A2AD-42E7C869CD31}
DEFINE_GUID(CLSID_ENCODER_MPEG4SStP, 
   0xd9683ba9, 0x8542, 0x47dc, 0xa2, 0xad, 0x42, 0xe7, 0xc8, 0x69, 0xcd, 0x31);

// {E16B4CFE-4142-4A9D-BF46-3DB4E263F266}
DEFINE_GUID(CLSID_ENCODER_H264_SW2, 
0xe16b4cfe, 0x4142, 0x4a9d, 0xbf, 0x46, 0x3d, 0xb4, 0xe2, 0x63, 0xf2, 0x66);

// {90448B91-C1FE-434B-BCD5-0FD05667EDC9}
DEFINE_GUID(CLSID_ENCODER_M264, 
0x90448b91, 0xc1fe, 0x434b, 0xbc, 0xd5, 0xf, 0xd0, 0x56, 0x67, 0xed, 0xc9);

// {7C545454-B20C-4530-84DE-1D1E0F2846C4}
DEFINE_GUID(IID_IMvDecoderStream, 
   0x7c545454, 0xb20c, 0x4530, 0x84, 0xde, 0x1d, 0x1e, 0xf, 0x28, 0x46, 0xc4);

// {C5A1A87E-3497-4A35-B792-7C76700AC2C1}
DEFINE_GUID(IID_IMvRTPReceiverStream,
   0xc5a1a87e, 0x3497, 0x4a35, 0xb7, 0x92, 0x7c, 0x76, 0x70, 0xa, 0xc2, 0xc1);

